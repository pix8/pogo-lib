/*
*	Compressed and generated using grunt.js sass/compress build tools
*
*	@title: 	ui.accordion.scss (partial)
* 	@project:	pix8 ui
* 	@author: 	Jonathan Brincat@pix8.co.uk <jonathan@pix8.co.uk>
*
**/

@charset "UTF-8";


/* =============================================================================
	UI Accordion
	========================================================================== */
.ui__accordion {
	@include list-unstyled;

	.ui__tab {
		color: #FFF;
		text-transform: uppercase;
		font-size: 1.2rem;
		margin: 4px 0 0;
	
		&:after {
			position: absolute;
			top: 10px;
			right: 20px;
			width: 8px;
			height: 8px;
			border-top: 3px solid #FFF;
			border-right: 3px solid #FFF;
			transform: rotate(135deg);
			transform-origin: 50%;
			transition: transform 500ms;

			html:not(.client__no-js) & {
				content: "";
			}
		}
	
		.ui__toggle {
			background-color: $color__base;
			border: 0 none;
			text-transform: inherit;
			font-size: inherit;
			color: inherit;
			text-align: left;
			width: 100%;
			padding: 10px 42px 10px 10px;
		}
	
		&.state__active,
		&[aria-selected=true],
		&[aria-expanded=true] {
			&:after {
				transform: rotate(-45deg);
			}

			& + .ui__pane {
				& > div {
					opacity: 1;
				}
			}
		}

		// &.state__transition {
		// 	& + .ui__pane {
		// 		transition: height ease 250ms;
		// 	}
		// }
	}

	.ui__pane {
		border: 4px solid $color__base;
		border-top-width: 0;
		border-bottom-width: 0;
		margin: 0;
		transition: height ease 250ms;
		will-change: height;

		//DEVNOTE: this is a more elegant way to accomodate the visual realisation of bottom border and allowing it to collapse and get cropped(leaving no residual artifact to counter i.e. a visible bottom border remaining below each accordion tab external to the button's hotspot)
		&:after {
			content: "";
			background-color: $color__base;
			height: 4px;
			position: absolute;
			bottom: 0;
			left: 0;
			right: 0;
		}

		& > div {
			flex: 1 1 auto;
			overflow: hidden; /*counter margin collapse*/
			padding: 0 10px 4px;
			opacity: 0;
			transition: opacity ease 550ms 50ms;
			will-change: opacity;
		}
	}
}
